{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/boards-create/boards-create.component.css","webpack:///./src/app/boards-create/boards-create.component.html","webpack:///./src/app/boards-create/boards-create.component.ts","webpack:///./src/app/boards-detail/boards-detail.component.css","webpack:///./src/app/boards-detail/boards-detail.component.html","webpack:///./src/app/boards-detail/boards-detail.component.ts","webpack:///./src/app/boards-edit/boards-edit.component.css","webpack:///./src/app/boards-edit/boards-edit.component.html","webpack:///./src/app/boards-edit/boards-edit.component.ts","webpack:///./src/app/boards/boards.component.css","webpack:///./src/app/boards/boards.component.html","webpack:///./src/app/boards/boards.component.ts","webpack:///./src/app/fs.service.ts","webpack:///./src/app/inicio/inicio.component.css","webpack:///./src/app/inicio/inicio.component.html","webpack:///./src/app/inicio/inicio.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InicioComponent } from './inicio/inicio.component'\r\nconst routes: Routes = [\r\n    { path:'', redirectTo: 'inicio', pathMatch:'full'},\r\n    {path:'inicio',component: InicioComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".container {\\n  padding: 20px;\\n}\\ntable {\\n  width: 100%;\\n}\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"header\\\">\\n    <h1>\\n      Angular 6 Firebase\\n    </h1>\\n    <img width=\\\"550\\\" alt=\\\"Angular Logo\\\" src=\\\"https://enmilocalfunciona.io/content/images/2019/07/perrete-angular-8.png\\\">\\n  </div>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n    </ng-container>\\n  \\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n  \\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"weight\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n    </ng-container>\\n  \\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"symbol\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n    </ng-container>\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  \\n  <router-outlet></router-outlet>\\n\\n  <footer class=\\\"mdl-mega-footer\\\">\\n    <div class=\\\"mdl-mega-footer__middle-section\\\">\\n  \\n      <div class=\\\"mdl-mega-footer__drop-down-section\\\">\\n        <input class=\\\"mdl-mega-footer__heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n        <h1 class=\\\"mdl-mega-footer__heading\\\">Features</h1>\\n        <ul class=\\\"mdl-mega-footer__link-list\\\">\\n          <li><a href=\\\"#\\\">About</a></li>\\n          <li><a href=\\\"#\\\">Terms</a></li>\\n          <li><a href=\\\"#\\\">Partners</a></li>\\n          <li><a href=\\\"#\\\">Updates</a></li>\\n        </ul>\\n      </div>\\n  \\n      <div class=\\\"mdl-mega-footer__drop-down-section\\\">\\n        <input class=\\\"mdl-mega-footer__heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n        <h1 class=\\\"mdl-mega-footer__heading\\\">Details</h1>\\n        <ul class=\\\"mdl-mega-footer__link-list\\\">\\n          <li><a href=\\\"#\\\">Specs</a></li>\\n          <li><a href=\\\"#\\\">Tools</a></li>\\n          <li><a href=\\\"#\\\">Resources</a></li>\\n        </ul>\\n      </div>\\n  \\n      <div class=\\\"mdl-mega-footer__drop-down-section\\\">\\n        <input class=\\\"mdl-mega-footer__heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n        <h1 class=\\\"mdl-mega-footer__heading\\\">Technology</h1>\\n        <ul class=\\\"mdl-mega-footer__link-list\\\">\\n          <li><a href=\\\"#\\\">How it works</a></li>\\n          <li><a href=\\\"#\\\">Patterns</a></li>\\n          <li><a href=\\\"#\\\">Usage</a></li>\\n          <li><a href=\\\"#\\\">Products</a></li>\\n          <li><a href=\\\"#\\\">Contracts</a></li>\\n        </ul>\\n      </div>\\n  \\n      <div class=\\\"mdl-mega-footer__drop-down-section\\\">\\n        <input class=\\\"mdl-mega-footer__heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n        <h1 class=\\\"mdl-mega-footer__heading\\\">FAQ</h1>\\n        <ul class=\\\"mdl-mega-footer__link-list\\\">\\n          <li><a href=\\\"#\\\">Questions</a></li>\\n          <li><a href=\\\"#\\\">Answers</a></li>\\n          <li><a href=\\\"#\\\">Contact us</a></li>\\n        </ul>\\n      </div>\\n  \\n    </div>\\n  \\n    <div class=\\\"mdl-mega-footer__bottom-section\\\">\\n      <div class=\\\"mdl-logo\\\">Title</div>\\n      <ul class=\\\"mdl-mega-footer__link-list\\\">\\n        <li><a href=\\\"#\\\">Help</a></li>\\n        <li><a href=\\\"#\\\">Privacy & Terms</a></li>\\n      </ul>\\n    </div>\\n  \\n  </footer>\\n</div>\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport * as firebase from 'firebase';\nimport firestore from 'firebase/firestore';\n\nconst settings = {timestampsInSnapshots: true};\nconst config = {\n  apiKey: \"AIzaSyDzM171PlzGCXKWpksbD_tr1D5KUcnuZN8\",\n  authDomain: \"angular6-b4fa0.firebaseapp.com\",\n  databaseURL: \"https://angular6-b4fa0.firebaseio.com\",\n  projectId: \"angular6-b4fa0\",\n  storageBucket: \"angular6-b4fa0.appspot.com\",\n  messagingSenderId: \"435305771488\",\n  appId: \"1:435305771488:web:f70982d7af2b0e2b8ffb85\",\n  measurementId: \"G-FCVP2B4W5Y\"\n};\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with sorting\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {read: true}) sort: MatSort;\n\n  ngOnInit() {\n    firebase.initializeApp(config);\n    firebase.firestore().settings(settings);\n    this.dataSource.sort = this.sort;\n  }\n}\n\n\n\n\t\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//import { DualRingLoaderModule } from '@bit/joshk.ng-spinners.dualring-loader';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule } from \"@angular/material\";\n\nimport { AppComponent } from './app.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { BoardsDetailComponent } from './boards-detail/boards-detail.component';\nimport { BoardsCreateComponent } from './boards-create/boards-create.component';\nimport { BoardsEditComponent } from './boards-edit/boards-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InicioComponent } from './inicio/inicio.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'boards',\n    component: BoardsComponent,\n    data: { title: 'Boards List' }\n  },\n  {\n    path: 'boards-details/:id',\n    component: BoardsDetailComponent,\n    data: { title: 'Boards Details' }\n  },\n  {\n    path: 'boards-create',\n    component: BoardsCreateComponent,\n    data: { title: 'Create Boards' }\n  },\n  {\n    path: 'boards-edit/:id',\n    component: BoardsEditComponent,\n    data: { title: 'Edit Boards' }\n  },\n  { path: '',\n    redirectTo: '/boards',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardsComponent,\n    BoardsDetailComponent,\n    BoardsCreateComponent,\n    BoardsEditComponent,\n    InicioComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    //DualRingLoaderModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n\n\n\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/boards']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"boardsForm\\\" (ngSubmit)=\\\"onFormSubmit(boardsForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('title').valid && boardsForm.get('title').touched\\\">Please enter Board Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('description').valid && boardsForm.get('description').touched\\\">Please enter Board Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('author').valid && boardsForm.get('author').touched\\\">Please enter Board Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!boardsForm.valid\\\" mat-fab color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FsService } from '../fs.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-boards-create',\n  templateUrl: './boards-create.component.html',\n  styleUrls: ['./boards-create.component.css']\n})\nexport class BoardsCreateComponent implements OnInit {\n\n  boardsForm: FormGroup;\n  title:string='';\n  description:string='';\n  author:string='';\n\n  constructor(private router: Router, private fs: FsService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.boardsForm = this.formBuilder.group({\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.fs.postBoards(form)\n      .subscribe(res => {\n          let id = res['key'];\n          this.router.navigate(['/boards-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n.edit-btn {\\n  margin: 0 20px 20px;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/boards']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title><h2>{{board.title}}</h2></mat-card-title>\\n    <mat-card-subtitle>{{board.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <dl>\\n      <dt>Title:</dt>\\n      <dd>{{board.title}}</dd>\\n      <dt>Description:</dt>\\n      <dd>{{board.description}}</dd>\\n      <dt>Author:</dt>\\n      <dd>{{board.author}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/boards-edit', board.key]\\\" class=\\\"edit-btn\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-fab color=\\\"warn\\\" (click)=\\\"deleteBoard(board.key)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FsService } from '../fs.service';\n\n@Component({\n  selector: 'app-boards-detail',\n  templateUrl: './boards-detail.component.html',\n  styleUrls: ['./boards-detail.component.css']\n})\nexport class BoardsDetailComponent implements OnInit {\n\n  board = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private fs: FsService) { }\n\n  ngOnInit() {\n    this.getBoardDetails(this.route.snapshot.params['id']);\n  }\n\n  getBoardDetails(id) {\n    this.fs.getBoard(id)\n      .subscribe(data => {\n        console.log(data);\n        this.board = data;\n      });\n  }\n\n  deleteBoard(id) {\n    this.fs.deleteBoards(id)\n      .subscribe(res => {\n          this.router.navigate(['/boards']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-fab color=\\\"primary\\\" (click)=\\\"boardsDetails()\\\"><mat-icon>visibility</mat-icon></a>\\n</div>\\n<form [formGroup]=\\\"boardsForm\\\" (ngSubmit)=\\\"onFormSubmit(boardsForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('title').valid && boardsForm.get('title').touched\\\">Please enter Book Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('description').valid && boardsForm.get('description').touched\\\">Please enter Book Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!boardsForm.get('author').valid && boardsForm.get('author').touched\\\">Please enter Book Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!boardsForm.valid\\\" mat-fab color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FsService } from '../fs.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-boards-edit',\n  templateUrl: './boards-edit.component.html',\n  styleUrls: ['./boards-edit.component.css']\n})\nexport class BoardsEditComponent implements OnInit {\n\n  boardsForm: FormGroup;\n  id:string = '';\n  title:string = '';\n  description:string = '';\n  author:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private fs: FsService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getBoard(this.route.snapshot.params['id']);\n    this.boardsForm = this.formBuilder.group({\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required]\n    });\n  }\n\n  getBoard(id) {\n    this.fs.getBoard(id).subscribe(data => {\n      this.id = data.key;\n      this.boardsForm.setValue({\n        title: data.title,\n        description: data.description,\n        author: data.author\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.fs.updateBoards(this.id, form)\n      .subscribe(res => {\n          this.router.navigate(['/boards']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  boardsDetails() {\n    this.router.navigate(['/boards-details', this.id]);\n  }\n\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.title-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/boards-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"title-col\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Description Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"author\\\">\\n      <th mat-header-cell *matHeaderCellDef> Author </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/boards-details/', row.key]\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { FsService } from '../fs.service';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.css']\n})\nexport class BoardsComponent implements OnInit {\n\n  displayedColumns = ['title', 'description', 'author'];\n  dataSource = new BoardDataSource(this.fs);\n\n  constructor(private fs: FsService) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\nexport class BoardDataSource extends DataSource<any> {\n\n  constructor(private fs: FsService) {\n    super()\n  }\n\n  connect() {\n    return this.fs.getBoards();\n  }\n\n  disconnect() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FsService {\n\n  ref = firebase.firestore().collection('boards');\n\n  constructor() { }\n\n  getBoards(): Observable<any> {\n    return new Observable((observer) => {\n      this.ref.onSnapshot((querySnapshot) => {\n        let boards = [];\n        querySnapshot.forEach((doc) => {\n          let data = doc.data();\n          boards.push({\n            key: doc.id,\n            title: data.title,\n            description: data.description,\n            author: data.author\n          });\n        });\n        observer.next(boards);\n      });\n    });\n  }\n\n  getBoard(id: string): Observable<any> {\n    return new Observable((observer) => {\n      this.ref.doc(id).get().then((doc) => {\n        let data = doc.data();\n        observer.next({\n          key: doc.id,\n          title: data.title,\n          description: data.description,\n          author: data.author\n        });\n      });\n    });\n  }\n\n  postBoards(data): Observable<any> {\n    return new Observable((observer) => {\n      this.ref.add(data).then((doc) => {\n        observer.next({\n          key: doc.id,\n        });\n      });\n    });\n  }\n\n  updateBoards(id: string, data): Observable<any> {\n    return new Observable((observer) => {\n      this.ref.doc(id).set(data).then(() => {\n        observer.next();\n      });\n    });\n  }\n\n  deleteBoards(id: string): Observable<{}> {\n    return new Observable((observer) => {\n      this.ref.doc(id).delete().then(() => {\n        observer.next();\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  inicio works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}